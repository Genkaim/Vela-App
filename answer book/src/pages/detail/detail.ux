<template>
	<div class="page">
		<scroll id="scroll" scroll-y="true" bounces="true" bounces="true" scroll-top="0px">
			<image class="show" src="/common/dev-2.png"></image>
			<div class="setting" for="{{settings}}">
				<div class="setting_item" style="border: 3px solid {{ ec[$item.value] }};"
					@click="change_setting($item.index)">
					<text class="line" style="text-align: center">{{ $item.text }}</text>
				</div>
			</div>
			<div class="info">
				<text class="line" style="font-weight: bold; margin-left: -7px; color: grey">
					数据来自
				</text>
				<text class="line">A-kirami/</text>
				<text class="line">answers</text>
				<text class="line">book</text>
			</div>
			<image src="/common/black.png" class="black"></image>
		</scroll>
		<input class="exit" type="button" onclick="exit()" />
		<image src="/common/mask.png" class="mask"></image>
		<input class="exit" type="button" onclick="exit()" />
		<div class="router_ani_in" for="array">
			<image src="{{'/common/asserts/' + String($item.id) + '.png'}}" if="{{$item.id == ani_flag}}"></image>
		</div>
	</div>
</template>

<script>
import router from "@system.router";
export default {
	computed: {
		// 计算属性的 getter
		border_judge(idx) {
			if (this.settings[idx]) return "#0074ff";
			return "#212421";
		},
	},
	private: {
		ec: {
			true: "#0074ff",
			false: "#212421",
		},
		settings: [
			{
				text: "实验性功能",
				value: false,
				index: "sci",
				type: "bool",
			},
		],
		ani_flag: 10,
		array: [
			{
				id: 1,
			},
			{
				id: 2,
			},
			{
				id: 3,
			},
			{
				id: 4,
			},
			{
				id: 5,
			},
			{
				id: 6,
			},
			{
				id: 7,
			},
			{
				id: 8,
			},
			{
				id: 9,
			},
			{
				id: 10,
			},
		],
		ani_duration: 500,
	},
	exit(e) {
		if (this.settings[0]["value"]) {
			this.router_ani("exit");
			setTimeout(() => {
				router.back();
			}, this.ani_duration);
		} else {
			router.back();
		}
	},
	change_setting(idx) {
		let lt = this.settings.length;
		let _i = 0;
		while (this.settings[_i]["index"] != idx && _i < lt) _i++;
		this.settings[_i]["value"] = !this.settings[_i]["value"];
		this.$app.$def.data.settings[_i]["value"] = this.settings[_i]["value"];
	},
	next_ani() {
		if (this.ani_flag < 10) {
			this.ani_flag += 1;
		}
	},
	pre_ani() {
		if (this.ani_flag > 0) {
			this.ani_flag -= 1;
		}
	},
	router_ani(mode) {
		if (mode === "exit") {
			this.ani_flag = 0;
			var intervalID = setInterval(() => {
				this.next_ani();
			}, (this.ani_duration - 100) / 10);
			setTimeout(() => {
				clearInterval(intervalID); // 清除定时器
			}, this.ani_duration - 100);
		}
		if (mode === "in") {
			this.ani_flag = 10;
			var intervalID = setInterval(() => {
				this.pre_ani();
			}, this.ani_duration / 10);
			setTimeout(() => {
				clearInterval(intervalID); // 清除定时器
				this.ani_flag = 0;
			}, this.ani_duration);
		}
	},
	onShow() {
		this.ani_duration = this.$app.$def.data.router_animation_duration;
		this.settings[0]["value"] = this.$app.$def.data.settings[0]["value"];
		if (this.settings[0]["value"]) this.router_ani("in");
		else{
			this.ani_flag = 0;
		}
	},
};
</script>

<style>
.setting_item {
	background-color: #212421;
	border-radius: 30px;
	width: 170px;
	margin-left: 11px;
	height: 90px;
	padding-left: 20px;
}
.setting {
	position: absolute;
	top: 305px;
}
.mask {
	object-fit: contain;
	position: absolute;
	bottom: 0px;
	width: 192px;
}
#scroll {
	position: absolute;
	width: 192px;
	height: 490px;
}
.line {
	color: white;
	font-size: 25px;
}
.info {
	display: flex;
	flex-direction: column;
	position: absolute;
	top: 405px;
	width: 170px;
	margin-left: 11px;
	margin-bottom: 100px;
	background-color: #212421;
	border-radius: 30px;
	height: 180px;
	padding-left: 20px;
	padding-top: 20px;
}
.show {
	width: 192px;
	height: 490px;
	position: absolute;
}
.bggg {
	top: 160px;
	width: 95%;
	height: 130px;
	background-color: #1b1b1b;
	border-radius: 20px;
}
.page {
	flex-direction: column;
	justify-content: center;
	align-items: center;
	background-color: #000000;
}

.title {
	font-size: 20px;
	text-align: center;
}
.black {
  width: 192px;
  height: 100px;
  position: absolute;
  top: 600px;
}
.exit {
	position: absolute;
	background-color: rgba(47, 47, 47, 0.003);
	bottom: 0px;
	left: 45.5px;
	height: 80px;
	width: 100px;
	background-image: url("/common/icon-back.png");
}
</style>